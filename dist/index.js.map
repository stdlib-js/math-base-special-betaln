{
  "version": 3,
  "sources": ["../lib/dceval.js", "../lib/gamma_correction.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The code is adapted from the Fortran routine from the FNLIB library of the [SLATEC Common Mathematical Library]{@link http://www.netlib.no/netlib/slatec/fnlib/}.\n*\n* The original code was developed by W. Fullerton of Los Alamos Scientific Laboratory, a governmental institution, and is therefore public domain.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar ALGMCS = [\n\t+0.1276642195630062933333333333333e-30,\n\t-0.3401102254316748799999999999999e-29,\n\t+0.1025680058010470912000000000000e-27,\n\t-0.3547598158101070547199999999999e-26,\n\t+0.1429227355942498147573333333333e-24,\n\t-0.6831888753985766870111999999999e-23,\n\t+0.3962837061046434803679306666666e-21,\n\t-0.2868042435334643284144622399999e-19,\n\t+0.2683181998482698748957538846666e-17,\n\t-0.3399615005417721944303330599666e-15,\n\t+0.6221098041892605227126015543416e-13,\n\t-0.1809129475572494194263306266719e-10,\n\t+0.9810825646924729426157171547487e-8,\n\t-0.1384948176067563840732986059135e-4,\n\t+0.1666389480451863247205729650822e+0\n];\nvar LEN = ALGMCS.length;\n\n\n// MAIN //\n\n/**\n* Evaluate the n-term Chebyshev series at `x`.\n*\n* ## References\n*\n* -   Broucke, Roger. 1973. \"Algorithm: Ten Subroutines for the Manipulation of Chebyshev Series.\" _Communications of the ACM_ 16 (4). New York, NY, USA: ACM: 254\u201356. doi:[10.1145/362003.362037](https://doi.org/10.1145/362003.362037).\n* -   Fox, Leslie, and Ian Bax Parker. 1968. _Chebyshev polynomials in numerical analysis_. Oxford Mathematical Handbooks. London, United Kingdom: Oxford University Press. <https://books.google.com/books?id=F8NzsEtJCD0C>.\n*\n* @private\n* @param {number} x - value at which the series is to be evaluated\n* @returns {number} series value\n*/\nfunction dcseval( x ) {\n\tvar twox;\n\tvar b2;\n\tvar b1;\n\tvar b0;\n\tvar i;\n\n\tif ( x < -1.1 || x > 1.1 ) {\n\t\treturn NaN;\n\t}\n\tb1 = 0.0;\n\tb0 = 0.0;\n\ttwox = 2.0 * x;\n\tfor ( i = 0; i < LEN; i++ ) {\n\t\tb2 = b1;\n\t\tb1 = b0;\n\t\tb0 = (twox*b1) - b2 + ALGMCS[ i ];\n\t}\n\treturn ( b0-b2 ) * 0.5;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dcseval;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The code is adapted from the Fortran routine from the FNLIB library of the [SLATEC Common Mathematical Library]{@link http://www.netlib.no/netlib/fn/d9lgmc.f}.\n*\n* The original code was developed by W. Fullerton of Los Alamos Scientific Laboratory, a governmental institution, and is therefore public domain.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar pow = require( '@stdlib/math-base-special-pow' );\nvar dceval = require( './dceval.js' );\n\n\n// VARIABLES //\n\nvar XBIG = 94906265.62425156;\nvar XMAX = 3.745194030963158e306;\n\n\n// MAIN //\n\n/**\n* Compute the log gamma correction factor for `x >= 10`.\n*\n* ```tex\n* \\log(\\gamma(x)) = \\log(\\sqrt{2*\\Pi}) + (x-0.5) \\cdot \\log(x) - x \\operatorname{R9LGMC}(x).\n* ```\n*\n* @private\n* @param {number} x - input value\n* @returns {number} correction value\n*/\nfunction gammaCorrection( x ) {\n\tif ( x < 10.0 ) {\n\t\treturn NaN;\n\t}\n\t// Check for underflow...\n\tif ( x >= XMAX ) {\n\t\treturn 0.0;\n\t}\n\tif ( x < XBIG ) {\n\t\treturn dceval( (2.0*pow( 10.0/x, 2.0 )) - 1.0 ) / x;\n\t}\n\treturn 1.0 / (x * 12.0);\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammaCorrection;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The code is adapted from the Fortran routine from the FNLIB library of the [SLATEC Common Mathematical Library]{@link http://www.netlib.no/netlib/slatec/fnlib/albeta.f}.\n*\n* The original code was developed by W. Fullerton of Los Alamos Scientific Laboratory, a governmental institution, and is therefore public domain.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaln = require( '@stdlib/math-base-special-gammaln' );\nvar log1p = require( '@stdlib/math-base-special-log1p' );\nvar gamma = require( '@stdlib/math-base-special-gamma' );\nvar max = require( '@stdlib/math-base-special-max' );\nvar min = require( '@stdlib/math-base-special-min' );\nvar ln = require( '@stdlib/math-base-special-ln' );\nvar LN_SQRT_TWO_PI = require( '@stdlib/constants-float64-ln-sqrt-two-pi' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\nvar correction = require( './gamma_correction.js' );\n\n\n// MAIN //\n\n/**\n* Evaluate the natural logarithm of the beta function.\n*\n* @param {NonNegativeNumber} a - first input value\n* @param {NonNegativeNumber} b - second input value\n* @returns {number} natural logarithm of beta function\n*\n* @example\n* var v = betaln( 0.0, 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = betaln( 1.0, 1.0 );\n* // returns 0.0\n*\n* @example\n* var v = betaln( -1.0, 2.0 );\n* // returns NaN\n*\n* @example\n* var v = betaln( 5.0, 0.2 );\n* // returns ~1.218\n*\n* @example\n* var v = betaln( 4.0, 1.0 );\n* // returns ~-1.386\n*\n* @example\n* var v = betaln( NaN, 2.0 );\n* // returns NaN\n*/\nfunction betaln( a, b ) {\n\tvar corr;\n\tvar p;\n\tvar q;\n\n\tp = min( a, b );\n\tq = max( a, b );\n\n\tif ( p < 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( p === 0.0 ) {\n\t\treturn PINF;\n\t}\n\tif ( q === PINF ) {\n\t\treturn NINF;\n\t}\n\t// Case: p and q are big\n\tif ( p >= 10.0 ) {\n\t\tcorr = correction( p ) + correction( q ) - correction( p+q );\n\t\treturn ( -0.5*ln( q ) ) + LN_SQRT_TWO_PI + corr + ( (p-0.5) * ln( p/(p+q) ) ) + ( q*log1p( -p/(p+q) ) ); // eslint-disable-line max-len\n\t}\n\t// Case: p is small, but q is big\n\tif ( q >= 10.0 ) {\n\t\tcorr = correction( q ) - correction( p+q );\n\t\treturn gammaln( p ) + corr + p - (p*ln( p+q )) + ( (q-0.5)*log1p( -p/(p+q) ) ); // eslint-disable-line max-len\n\t}\n\t// Case: p and q are small\n\treturn ln( gamma( p ) * ( gamma( q ) / gamma( p+q ) ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = betaln;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm of the beta function.\n*\n* @module @stdlib/math-base-special-betaln\n*\n* @example\n* var betaln = require( '@stdlib/math-base-special-betaln' );\n*\n* var v = betaln( 0.0, 0.0 );\n* // returns Infinity\n*\n* v = betaln( 1.0, 1.0 );\n* // returns 0.0\n*\n* v = betaln( -1.0, 2.0 );\n* // returns NaN\n*\n* v = betaln( 5.0, 0.2 );\n* // returns ~1.218\n*\n* v = betaln( 4.0, 1.0 );\n* // returns ~-1.386\n*\n* v = betaln( NaN, 2.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cA6BA,IAAIC,EAAS,CACZ,qBACA,sBACA,qBACA,uBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,oBACA,sBACA,kBACD,EACIC,EAAMD,EAAO,OAiBjB,SAASE,EAASC,EAAI,CACrB,IAAIC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKL,EAAI,MAAQA,EAAI,IACpB,MAAO,KAKR,IAHAG,EAAK,EACLC,EAAK,EACLH,EAAO,EAAMD,EACPK,EAAI,EAAGA,EAAIP,EAAKO,IACrBH,EAAKC,EACLA,EAAKC,EACLA,EAAMH,EAAKE,EAAMD,EAAKL,EAAQQ,CAAE,EAEjC,OAASD,EAAGF,GAAO,EACpB,CAKAN,EAAO,QAAUG,ICvFjB,IAAAO,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cA6BA,IAAIC,EAAM,QAAS,+BAAgC,EAC/CC,EAAS,IAKTC,EAAO,oBACPC,EAAO,qBAgBX,SAASC,EAAiBC,EAAI,CAC7B,OAAKA,EAAI,GACD,IAGHA,GAAKF,EACF,EAEHE,EAAIH,EACDD,EAAS,EAAID,EAAK,GAAKK,EAAG,CAAI,EAAK,CAAI,EAAIA,EAE5C,GAAOA,EAAI,GACnB,CAKAN,EAAO,QAAUK,ICrEjB,IAAAE,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cA6BA,IAAIC,EAAU,QAAS,mCAAoC,EACvDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAM,QAAS,+BAAgC,EAC/CC,EAAM,QAAS,+BAAgC,EAC/CC,EAAK,QAAS,8BAA+B,EAC7CC,EAAiB,QAAS,0CAA2C,EACrEC,EAAO,QAAS,gCAAiC,EACjDC,EAAO,QAAS,gCAAiC,EACjDC,EAAa,IAoCjB,SAASC,EAAQ,EAAGC,EAAI,CACvB,IAAIC,EACAC,EACAC,EAKJ,OAHAD,EAAIT,EAAK,EAAGO,CAAE,EACdG,EAAIX,EAAK,EAAGQ,CAAE,EAETE,EAAI,EACD,IAEHA,IAAM,EACHL,EAEHM,IAAMN,EACHD,EAGHM,GAAK,IACTD,EAAOH,EAAYI,CAAE,EAAIJ,EAAYK,CAAE,EAAIL,EAAYI,EAAEC,CAAE,EAClD,IAAKT,EAAIS,CAAE,EAAMR,EAAiBM,GAAUC,EAAE,IAAOR,EAAIQ,GAAGA,EAAEC,EAAG,EAAQA,EAAEb,EAAO,CAACY,GAAGA,EAAEC,EAAG,GAGhGA,GAAK,IACTF,EAAOH,EAAYK,CAAE,EAAIL,EAAYI,EAAEC,CAAE,EAClCd,EAASa,CAAE,EAAID,EAAOC,EAAKA,EAAER,EAAIQ,EAAEC,CAAE,GAAQA,EAAE,IAAKb,EAAO,CAACY,GAAGA,EAAEC,EAAG,GAGrET,EAAIH,EAAOW,CAAE,GAAMX,EAAOY,CAAE,EAAIZ,EAAOW,EAAEC,CAAE,EAAI,CACvD,CAKAf,EAAO,QAAUW,IC3DjB,IAAIK,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_dceval", "__commonJSMin", "exports", "module", "ALGMCS", "LEN", "dcseval", "x", "twox", "b2", "b1", "b0", "i", "require_gamma_correction", "__commonJSMin", "exports", "module", "pow", "dceval", "XBIG", "XMAX", "gammaCorrection", "x", "require_main", "__commonJSMin", "exports", "module", "gammaln", "log1p", "gamma", "max", "min", "ln", "LN_SQRT_TWO_PI", "NINF", "PINF", "correction", "betaln", "b", "corr", "p", "q", "main"]
}
